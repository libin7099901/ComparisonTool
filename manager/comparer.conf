[CompareConfig]
#----------------------需要修改-----------------------

# 是否不跳过只在基准目录存在的文件, 当True(不跳过)时, 仅在左侧目录中存在的文件的内容也会被统计到各级结果中去
# 如果确认仅比对在两侧同时出现的文件, 请设置为False
# 不论何时, 仅在右侧的文件都不会进行更低层次的比较
not_skip_different_file=True

# 是否需要.txt结果文件(包括统计信息及比对详情)
need_result_file=True

# 是否需要csv文件(包括每个文件的条目和字识别率)
need_csv_file=True

# 左侧目录(将该目录作为基准, 支持相对路径)
left_path=

# 右侧目录
right_path=

# 结果文件(.txt格式的文件)
result_path=

#---------------------不需要修改-----------------------

# 以哪个目录为基准, 将用此目录中的信息作为统计结果的分母, 可选值为left_path和right_path(暂不支持调整,请勿修改该值)
standard_path=left_path
# 是否支持以递归的形式比对子目录(暂不支持,请设为False)
recursion_compare=False

#-----------------------说明--------------------------
# 0. 请保证标准及和比对集的文件都为UTF-8编码格式
# 1. 比对时会自动忽略空格及制表符
# 2. 比对的文件请保证key:value的格式
# 3. 比对的文件内如果有多个key相同, 需要保证标准和比对集中相应条目顺序相同才可以正确统计字正确率
# 4. 如果需要比对的仅是比对集中有的文件, 可以见not_skip_different_file设置为False, 只存在一边的文件将被跳过
# 5. 如果不需要结果文件可以将need_result_file和need_csv_file设为Flase
# 6. 如果Key为有效期限, 会删除掉两侧的"."后进行比对
#-----------------------------------------------------
